TEMA2

Apache configuración avanzada
Web por defecto en /var/www/html/index.html
Referenciada por /etc/apache2/sites-avaliable/000-default.conf
Puertos:
http -> 80
https -> 443

Habilitación de lista de tipo MIME
Web -> /etc/apache2/mods-available/mime.conf
Servidor -> /etc/mime.types

Host virtuales
Se pueden definir por nombre, por IP, o por servidores (duplicar el fichero apache2.conf)
para habilitar una nueva configuración en Apache (duplicar fichero apache2.conf) -> a2ensite -> reiniciar (reload)
Directorio -> /etc/apache2/sites-available
Se necesita crear un fichero de texto por cada virtualhost
a2ensite activar
a2dissite desactivar

empresa1.com.conf (nombre del fichero1)
<VirtualHost 192.168.200.250>
	DocumentRoot "/var/www/empresa1"
    ServerName empresa1.com
    ServerAlias www.empresa1.com empresa1.es www.empresa1.es
</VirtualHost>

empresa2.com.conf (nombre del fichero2)
<VirtualHost Nombre_Servidor:82>
	DocumentRoot "/var/www/empresa2"
    ServerName empresa2.com
    ServerAlias www.empresa2.com empresa2.es www.empresa2.es
</VirtualHost>

No olvidarse modificar el /etc/hosts para que resuelva el nombre a falta de un DNS

Módulos en Apache
/etc/apache2/mods-available/
habilitar (crea enlace simbólico a  /etc/apache2/mods-enabled)-> a2enmod 
deshabilitar (elimina enlace) -> a2dismod
Ejemplo: 
a2enmod ssl 
a2dismod ssl

Ejemplo sin tener los comandos, creando enlaces:
cd /etc/apache2/mods-available
ls ssl*
ln -s ../mods-enabled/ssl.conf ./ssl.conf
ln -s ../mods-enabled/ssl.load ./ssl.load
/etc/init.d/apache2 restart

Criptografía
mayor complejidad/seguridad -> menor velocidad/comodidad
simétrica(misma clave) & asimétrica (clave privada y pública)
Autoridades certificadoras de confianza (Acs/AACC)

SSL en Apache
/etc/apache2/sites-available/default-ssl
1. ON/OFF
2. Certificado digital
3. Clave privada
Servidor activo, pero no reconocidos por ACs (hay que pagar)
a2enmod ssl
a2ensite default-ssl.conf
systemctl reload apache2 
systemctl restart apache2 

Nuestros propios certificados
apt install openssl
mkdir /etc/apache2/tus-ssl/
make-ssl-cert /usr/share/ssl-cert/ssleay.cnf  /etc/apache2/tus-ssl/apache.pem
El nombre del dominio hace falta registrarlo en DNS o en su defecto /etc/hosts
Ahora modificar los datos de configuración por defecto en
/etc/apache2/sites-available/default-ssl.conf

Revisar /etc/apache2/ports.conf 
tenga el puerto 443 activo -> listen 443
Revisar si está el módulo activo y reinicar servicio
a2enmod ssl
a2ensite default-ssl
systemctl reload apache2 
systemctl restart apache2  (/etc/init.d/apache2 restart)
Comprobar el enlace que hayamos habilitado
https://autofirmado.ssl.miempresa-cbm.com
Recomendado añadir la excepción para que no pregunte cada vez.

Otra forma de crear los certificados en las instalaciones modernas es usando openssl
cd  /etc/apache2/tus-ssl/
openssl req -new -nodes -keyout miempresaweb.key -out miempresaweb.csr
(.key clave privada y .csr es la clave pública)
Se puede crear sin contraseña, pero es recomendable poner una.
Autofirmamos nuestra clave
openssl x509 -in miempresaweb.csr -out miempresaweb.crt -req -signkey miempresaweb.key -days 3650
Deberemos modificar la configuración por defecto en
/etc/apache2/sites-available/default-ssl
Cambiar el crt y el key
Revisar el puerto de escucha
Habilitar módulo y configuración ssl, reiniciar servicio.

En Firefox deberíamos tener el certificado 
Editar → Preferencias → Avanzado → Cifrado → Ver certificados

Creación de usuarios 
htpasswd -c /etc/apache2/web.htpasswd user1

Autentificación básica a través de htaccess -> en la carpeta-controlada (o directorio)
AuthType Basic
AuthName "Web con Autenticacion Basic"
AuthUserFile /etc/apache2/web.htpasswd
##Require valid-user 
Require user user1

<VirtualHost 192.168.200.250:443>
	ServerAdmin web-autenticacion@empresa-proyecto.com
	ServerName web-con-autenticacion-basic.empresa-proyecto.com
	DocumentRoot /var/www/web-con-autenticacion-basic
	<Directory /var/www/web-con-autentitacion-basic/>
		AllowOverride AuthConfig 
		Options Indexes FollowSymLinks MultiViews
		Order allow,deny
		allow from all
	</Directory>
	ErrorLog ${APACHE_LOG_DIR}/error-web-autenticacion-basic.log
	LogLevel warn
	CustomLog ${APACHE_LOG_DIR}/ssl_access-web-autenticacion-basic.log combined
	SSLEngine on
	SSLCertificateFile    /etc/apache2/tus-ssl/tupaginaweb.crt
	SSLCertificateKeyFile /etc/apache2/tus-ssl/tupaginaweb.key
</VirtualHost>


Accesos restringidos por carpetas
<VirtualHost IP_Servidor_Web:80>
Alias /carpeta-controlada "/usr/srv/control/carpeta-controlada/"
<Directory "/usr/srv/control/carpeta-controlada/">
Order deny,allow
Deny from all
Allow from IP_permiso_concedido
</Directory>
DocumentRoot /usr/srv/control/carpeta-controlada
ServerName www.empresa.com.
ServerAlias empresa.com
</VirtualHost>


LDAP
apt-get install slapd ldap-utils
dpkg-reconfigure slapd
No -> Sí -> No
// Arrancar o reiniciar el servidor LDAP
sudo /etc/init.d/slapd restart
// Parar el servidor LDAP
sudo /etc/init.d/slapd stop
Comprobación
netstat -ntlp | grep slapd
Habilitamos módulo y reinicamos servicio
a2enmod authnz_ldap
systemctl restart apache2
nano 
Modificar el virtualhost
<VirtualHost *:80>
	DocumentRoot "/var/www/autenticacion-ldap"
	ServerName www.empresa-proyecto.panel-de-control.com
	ServerAlias www.autenticacion-ldap.empresa-proyecto.com
	<Directory "/var/www/autenticacion-ldap">
		AllowOverride All      #habilita ficheros .htaccess
	</Directory>
	ErrorLog /var/log/apache2/error-autenticacion-ldap.log
	LogLevel warn
	CustomLog /var/log/apache2/access-autenticacion-ldap.log combined
</VirtualHost> 

nano /var/www/autenticacion-ldap/.htaccess
AuthName "Autenticación por LDAP"
AuthType Basic
AuthBasicProvider ldap
#AuthzLDAPAuthoritative on
AuthLDAPUrl ldap://127.0.0.1/ou=usuarios,dc=proyecto,dc=com?uid
Require ldap-user user1LDAP
#Los demás usuarios tendrán el acceso denegado
Aceeso para probar
www.empresa-proyecto.panel-de-control.com 
www.autenticacion-ldap.empresa-proyecto.com

Logs
Para revisar ficheros a parte del cat, se usa more(hoja a hoja), head y tail, siendo éste último el más usado 
tail -f fichero.log
Mantenimiento de logs -> rotatelogs (Apache) o logrotate (Linux)
Ejemplos con rotatelogs
CustomLog "|/usr/sbin/rotatelogs /var/log/apache2/access.log 86400" common 
CustomLog "|/usr/sbin/rotatelogs /var/logs/apache2/access.log 5M" common 
ErrorLog "|/usr/sbin/rotatelogs /var/logs/errorlog.%Y-%m-%d-%H_%M_%S 5M" common 

Configuración logrotate
/etc/logrotate.conf
/etc/logrotate.d/apache2
Ejemplos con logrotate
/usr/sbin/logrotate -d /etc/logrotate.d/apache2 
/usr/sbin/logrotate-f /etc/logrotate.conf 
Lo normal es añadirlo al cron


TIENDA VIRTUAL
apt-get install php-cli php-common php-mbstring php-gd php-intl php-xml php-mysql php-zip 
php-curl php-xmlrpc
dpkg -l curl

mkdir /temp/pruebas
cd /temp/pruebas
https://docs.opencart.com/en-gb/installation/
wget https://github.com/opencart/opencart/releases/download/3.0.3.3/opencart-3.0.3.3.zip
unzip opencart-3.0.3.3
mkdir /var/www/opencart
mv upload/* /var/www/opencart
cd /var/www/html/opencart/
ls -al

nano /etc/apache2/sites-available/opencart.conf
<VirtualHost *:80>
     #ServerAdmin admin@your_domain.com
     DocumentRoot /var/www/opencart/
     ServerName opencart.com
     ServerAlias www.opencart.com
     ErrorLog /var/log/apache2/error_tienda.log
     CustomLog /var/log/apache2/access_tienda.log combined
</VirtualHost>

cd /var/www/
chmod 755 opencart/
cd opencart
chmod -R 777 image/ system/ config-dist.php admin/
cp -p config-dist.php config.php
cp -p admin/config-dist.php admin/config.php

/usr/bin/mysql -h127.0.0.1 -uroot -p -e "CREATE DATABASE db_opencart;"
/usr/bin/mysql -h127.0.0.1 -uroot -p -e "GRANT SELECT, UPDATE, INSERT, DELETE, INDEX, ALTER, CREATE ON "db_opencart".* TO "db_user_opencart"@localhost IDENTIFIED BY 'opencart';"
/usr/bin/mysql -h127.0.0.1 -uroot -p -e "flush privileges;"


a2ensite opencart.conf
systemctl reload apache2
systemctl restart apache2
http://opencart.com/
Seguir los pasos para instalación completa

Después de instalar
rm -rf install




